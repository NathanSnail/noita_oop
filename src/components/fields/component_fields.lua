-- WARN: THIS FILE IS AUTOGENERATED - SEE `./src/components/fields/gen_component_fields.py`
return {
	ParticleEmitterComponent = {
		custom_style = "PARTICLE_EMITTER_CUSTOM_STYLE::Enum",
		m_cached_image_animation = "ParticleEmitter_Animation*",
		offset = "vec2",
		area_circle_radius = "ValueRange",
		gravity = "vec2",
		mExPosition = "vec2",
		m_last_emit_position = "ivec2",
		m_collision_angles = "float*",
	},
	ExplosionComponent = {
		trigger = "EXPLOSION_TRIGGER_TYPE::Enum",
		config_explosion = "ConfigExplosion",
	},
	InventoryComponent = {
		update_listener = "InvenentoryUpdateListener*",
		ui_container_size = "ivec2",
		ui_element_size = "ivec2",
		ui_position_on_screen = "ivec2",
		items = "INVENTORYITEM_VECTOR",
	},
	PathFindingComponent = {
		mState = "PathFindingComponentState::Enum",
		job_result_receiver = "MSG_QUEUE_PATH_FINDING_RESULT",
		jump_trajectories = "VECTOR_JUMPPARAMS",
		input = "PathFindingInput",
		path = "VECTOR_PATHNODE",
		path_next_node = "PathFindingResultNode",
		path_next_node_vector_to = "vec2",
		path_previous_node = "PathFindingNodeHandle",
		mLogic = "PathFindingLogic*",
		mFallbackLogic = "PathFindingLogic*",
		mSelectedLogic = "PathFindingLogic*",
		debug_path = "VECTOR_PATHNODE",
	},
	MoveToSurfaceOnCreateComponent = {
		type = "MOVETOSURFACE_TYPE::Enum",
	},
	NinjaRopeComponent = {
		mSegments = "NINJA_ROPE_SEGMENT_VECTOR",
	},
	TeleportComponent = {
		state = "TeleportComponentState::Enum",
		target = "vec2",
		teleported_entities = "ENTITY_VEC",
		source_location_camera_aabb = "types::aabb",
	},
	AIAttackComponent = {},
	AIComponent = {
		data = "AIData*",
	},
	AbilityComponent = {
		slot_consumption_function = "std_string",
		gun_config = "ConfigGun",
		gunaction_config = "ConfigGunActionInfo",
	},
	AdvancedFishAIComponent = {
		mTargetPos = "vec2",
		mTargetVec = "vec2",
		mLastFramesMovementAreaMin = "vec2",
		mLastFramesMovementAreaMax = "vec2",
	},
	AltarComponent = {
		m_recognized_entity_tags = "EntityTags",
		m_current_entity_tags = "EntityTags",
	},
	AnimalAIComponent = {
		attack_melee_finish_config_explosion = "ConfigExplosion",
		mAiStateStack = "AI_STATE_STACK",
		mGreatestThreat = "EntityID",
		mGreatestPrey = "EntityID",
		mLastFramesMovementAreaMin = "vec2",
		mLastFramesMovementAreaMax = "vec2",
		mNextJumpTarget = "vec2",
		mHomePosition = "vec2",
		mCurrentJob = "RtsUnitGoal",
	},
	ArcComponent = {
		type = "ARC_TYPE::Enum",
		mArcTarget = "EntityID",
	},
	AreaDamageComponent = {
		entity_responsible = "EntityID",
		aabb_min = "vec2",
		aabb_max = "vec2",
		damage_type = "DAMAGE_TYPES::Enum",
	},
	AttachToEntityComponent = {
		Transform = "types::xform",
		target = "EntityID",
	},
	AudioComponent = {
		m_latest_source = "AudioSourceHandle",
	},
	AudioListenerComponent = {},
	AudioLoopComponent = {
		m_source = "AudioSourceHandle",
	},
	BiomeTrackerComponent = {
		unsafe_current_biome = "Biome*",
	},
	BlackHoleComponent = {},
	BookComponent = {},
	BossDragonComponent = {
		mTargetVec = "vec2",
		mRandomTarget = "vec2",
		mLastLivingTargetPos = "vec2",
	},
	BossHealthBarComponent = {},
	CameraBoundComponent = {},
	CardinalMovementComponent = {
		mPrevPos = "vec2",
	},
	CellEaterComponent = {
		materials = "VEC_OF_MATERIALS",
	},
	CharacterCollisionComponent = {},
	CharacterDataComponent = {
		mVelocity = "vec2",
	},
	CharacterPlatformingComponent = {
		mExAnimationPos = "vec2",
	},
	CharacterStatsComponent = {
		stats = "CharacterStatsModifier",
	},
	CollisionTriggerComponent = {},
	ConsumableTeleportComponent = {
		target_location = "vec2",
	},
	ControllerGoombaAIComponent = {},
	ControlsComponent = {
		mAimingVector = "vec2",
		mAimingVectorNormalized = "vec2",
		mAimingVectorNonZeroLatest = "vec2",
		mGamepadAimingVectorRaw = "vec2",
		mJumpVelocity = "vec2",
		mMousePosition = "vec2",
		mMousePositionRaw = "vec2",
		mMousePositionRawPrev = "vec2",
		mMouseDelta = "vec2",
		mGamepadIndirectAiming = "vec2",
		mGamePadCursorInWorld = "vec2",
	},
	CrawlerAnimalComponent = {
		mMin = "vec2",
		mMax = "vec2",
		mPrevNonSnappedPosition = "vec2",
		mPrevCellPosition = "ivec2",
		mPrevCellPosition2 = "ivec2",
		mPrevCellPosition3 = "ivec2",
		mPrevCellPosition4 = "ivec2",
		mPrevCellPosition5 = "ivec2",
		mPrevCellPosition6 = "ivec2",
		mPrevCellPosition7 = "ivec2",
		mPrevCellPosition8 = "ivec2",
		mLatestPosition = "ivec2",
	},
	CutThroughWorldDoneHereComponent = {},
	DamageModelComponent = {
		damage_multipliers = "ConfigDamagesByType",
		ragdoll_fx_forced = "RAGDOLL_FX::Enum",
		mDamageMaterials = "std::vector<int>",
		mDamageMaterialsHowMuch = "std::vector<float>",
		mCollisionMessageMaterials = "std::vector<int>",
		mCollisionMessageMaterialCountsThisFrame = "std::vector<int>",
		mMaterialDamageThisFrame = "std::vector<float>",
		mPhysicsDamageVecThisFrame = "vec2",
		mPhysicsDamageEntity = "EntityTypeID",
		mPhysicsDamageTelekinesisCasterEntity = "EntityTypeID",
	},
	DamageNearbyEntitiesComponent = {
		damage_type = "DAMAGE_TYPES::Enum",
		ragdoll_fx = "RAGDOLL_FX::Enum",
		mVelocity = "vec2",
	},
	DebugFollowMouseComponent = {},
	DebugLogMessagesComponent = {},
	DebugSpatialVisualizerComponent = {
		color = "unsignedint",
	},
	DieIfSpeedBelowComponent = {},
	DroneLauncherComponent = {},
	DrugEffectComponent = {
		drug_fx_target = "ConfigDrugFx",
		m_drug_fx_current = "ConfigDrugFx",
	},
	DrugEffectModifierComponent = {
		fx_add = "ConfigDrugFx",
		fx_multiply = "ConfigDrugFx",
	},
	ElectricChargeComponent = {},
	ElectricityComponent = {
		mAvgDir = "vec2",
		mPrevPos = "ivec2",
	},
	ElectricityReceiverComponent = {},
	ElectricitySourceComponent = {},
	EndingMcGuffinComponent = {},
	EnergyShieldComponent = {
		mPrevPosition = "vec2",
	},
	ExplodeOnDamageComponent = {
		config_explosion = "ConfigExplosion",
	},
	FishAIComponent = {
		aabb_min = "vec2",
		aabb_max = "vec2",
		velocity = "vec2",
		mLastCheckPos = "vec2",
	},
	FlyingComponent = {},
	FogOfWarRadiusComponent = {},
	FogOfWarRemoverComponent = {},
	GameAreaEffectComponent = {
		game_effect_entitities = "VECTOR_STR",
		mEntitiesAppliedOutTo = "VECTOR_ENTITYID",
		mEntitiesAppliedFrame = "VECTOR_INT",
	},
	GameEffectComponent = {
		mSerializedData = "USTRING",
		mCaster = "EntityID",
		effect = "GAME_EFFECT::Enum",
		ragdoll_effect = "RAGDOLL_FX::Enum",
		causing_status_effect = "StatusEffectType",
	},
	GameLogComponent = {
		mVisitiedBiomes = "VISITED_VEC",
	},
	GameStatsComponent = {},
	GasBubbleComponent = {},
	GenomeDataComponent = {},
	GhostComponent = {
		velocity = "vec2",
		mEntityHome = "EntityID",
		mTargetPosition = "vec2",
		mRandomTarget = "vec2",
	},
	GodInfoComponent = {
		god_entity = "Entity*",
	},
	GunComponent = {
		mLuaManager = "LuaManager*",
	},
	HealthBarComponent = {},
	HitEffectComponent = {
		condition_effect = "GAME_EFFECT::Enum",
		condition_status = "StatusEffectType",
		effect_hit = "HIT_EFFECT::Enum",
	},
	HitboxComponent = {
		offset = "vec2",
	},
	HomingComponent = {
		predefined_target = "EntityID",
	},
	HotspotComponent = {
		offset = "vec2",
	},
	IKLimbAttackerComponent = {
		mTarget = "vec2",
		mTargetEntity = "EntityID",
		mState = "IKLimbAttackerState",
	},
	IKLimbComponent = {
		end_position = "vec2",
		mJointWorldPos = "vec2",
		mEndPrevPos = "vec2",
		mPart0PrevPos = "vec2",
		mPart1PrevPos = "vec2",
	},
	IKLimbWalkerComponent = {
		mTarget = "vec2",
		mPrevTarget = "vec2",
		mPrevCenterPosition = "vec2",
	},
	IKLimbsAnimatorComponent = {
		mPrevBodyPosition = "vec2",
		mLimbStates = "IKLimbStateVec",
	},
	IngestionComponent = {
		m_ingestion_satiation_material_cache = "std::set<int32>",
	},
	InheritTransformComponent = {
		Transform = "types::xform",
	},
	InteractableComponent = {},
	Inventory2Component = {
		mActiveItem = "EntityID",
		mActualActiveItem = "EntityID",
		mActiveStash = "EntityID",
		mThrowItem = "EntityID",
		mSmoothedItemAngleVec = "vec2",
	},
	InventoryGuiComponent = {
		imgui = "ImGuiContext*",
		mLastPurchasedAction = "Entity*",
	},
	ItemAIKnowledgeComponent = {},
	ItemActionComponent = {},
	ItemAlchemyComponent = {},
	ItemChestComponent = {
		mSeed = "unsignedint",
	},
	ItemComponent = {
		spawn_pos = "vec2",
		preferred_inventory = "INVENTORY_KIND::Enum",
		inventory_slot = "ivec2",
	},
	ItemCostComponent = {},
	ItemPickUpperComponent = {
		only_pick_this_entity = "EntityID",
		mLatestItemOverlapInfoBoxPosition = "vec2",
	},
	ItemRechargeNearGroundComponent = {},
	ItemStashComponent = {},
	KickComponent = {},
	LaserEmitterComponent = {
		laser = "ConfigLaser",
	},
	LevitationComponent = {},
	LifetimeComponent = {
		randomize_lifetime = "ValueRange",
	},
	LightComponent = {
		r = "unsignedint",
		g = "unsignedint",
		b = "unsignedint",
		mSprite = "as::Sprite*",
	},
	LightningComponent = {
		config_explosion = "ConfigExplosion",
		mExPosition = "vec2",
		mArcTarget = "EntityID",
	},
	LimbBossComponent = {},
	LiquidDisplacerComponent = {},
	LoadEntitiesComponent = {
		count = "ValueRangeInt",
	},
	LocationMarkerComponent = {},
	LooseGroundComponent = {},
	LuaComponent = {
		vm_type = "LUA_VM_TYPE::Enum",
		mLuaManager = "LuaManager*",
		mPersistentValues = "ValueMap",
	},
	MagicConvertMaterialComponent = {
		mFromMaterialArray = "std::vector<int>",
		mToMaterialArray = "std::vector<int>",
	},
	MagicXRayComponent = {},
	ManaReloaderComponent = {},
	MaterialAreaCheckerComponent = {
		area_aabb = "types::aabb",
	},
	MaterialInventoryComponent = {
		count_per_material_type = "MATERIAL_VEC_DOUBLES",
		ex_position = "vec2",
	},
	MaterialSeaSpawnerComponent = {
		size = "ivec2",
		offset = "ivec2",
	},
	MaterialSuckerComponent = {
		randomized_position = "types::iaabb",
	},
	MusicEnergyAffectorComponent = {},
	NullDamageComponent = {},
	OrbComponent = {},
	PathFindingGridMarkerComponent = {
		mNode = "PathFindingNodeHandle",
	},
	PhysicsAIComponent = {
		mLastPositionWhenHadPath = "vec2",
	},
	PhysicsBody2Component = {
		mBodyId = "b2ObjectID",
		mLocalPosition = "vec2",
		mBody = "b2Body*",
	},
	PhysicsBodyCollisionDamageComponent = {},
	PhysicsBodyComponent = {
		initial_velocity = "vec2",
		mBody = "b2Body*",
		mBodyId = "b2ObjectID",
		mLocalPosition = "b2Vec2",
	},
	PhysicsImageShapeComponent = {
		mBody = "b2Body*",
	},
	PhysicsJoint2Component = {
		type = "JOINT_TYPE::Enum",
	},
	PhysicsJoint2MutatorComponent = {},
	PhysicsJointComponent = {
		type = "JOINT_TYPE::Enum",
		mJoint = "b2Joint*",
	},
	PhysicsKeepInWorldComponent = {
		mExPosition = "vec2",
	},
	PhysicsPickUpComponent = {
		transform = "types::xform",
		original_left_joint_pos = "vec2",
		original_right_joint_pos = "vec2",
		leftJointPos = "vec2",
		rightJointPos = "vec2",
		leftJoint = "b2WeldJoint*",
		rightJoint = "b2WeldJoint*",
	},
	PhysicsRagdollComponent = {
		bodies = "std::vector<b2Body*>*",
	},
	PhysicsShapeComponent = {},
	PhysicsThrowableComponent = {},
	PixelSceneComponent = {},
	PixelSpriteComponent = {
		mPixelSprite = "PixelSprite*",
	},
	PlatformShooterPlayerComponent = {
		eating_area_min = "ivec2",
		eating_area_max = "ivec2",
		mSmoothedCameraPosition = "vec2",
		mSmoothedAimingVector = "vec2",
		mDesiredCameraPos = "vec2",
		mCamCorrectionGainSmoothed = "vec2",
		mCameraErrorPrev = "Vec2ArrayInline",
		mCamErrorAveraged = "vec2",
	},
	PlayerCollisionComponent = {
		mPhysicsCollisionHax = "b2Body*",
	},
	PlayerStatsComponent = {},
	PositionSeedComponent = {},
	PotionComponent = {},
	PressurePlateComponent = {
		aabb_min = "vec2",
		aabb_max = "vec2",
	},
	ProjectileComponent = {
		shoot_light_flash_r = "unsignedint",
		shoot_light_flash_g = "unsignedint",
		shoot_light_flash_b = "unsignedint",
		config = "ConfigGunActionInfo",
		config_explosion = "ConfigExplosion",
		damage_by_type = "ConfigDamagesByType",
		damage_critical = "ConfigDamageCritical",
		projectile_type = "PROJECTILE_TYPE::Enum",
		shell_casing_offset = "vec2",
		ragdoll_fx_on_collision = "RAGDOLL_FX::Enum",
		mWhoShot = "EntityID",
		mWhoShotEntityTypeID = "EntityTypeID",
		mEntityThatShot = "EntityID",
		mTriggers = "ProjectileTriggers",
		mDamagedEntities = "VEC_ENTITY",
	},
	RotateTowardsComponent = {},
	SetLightAlphaFromVelocityComponent = {
		mPrevPosition = "vec2",
	},
	SetStartVelocityComponent = {
		velocity = "vec2",
		randomize_angle = "ValueRange",
		randomize_speed = "ValueRange",
	},
	ShotEffectComponent = {
		condition_effect = "GAME_EFFECT::Enum",
		condition_status = "StatusEffectType",
	},
	SimplePhysicsComponent = {
		mOldPosition = "vec2",
	},
	SineWaveComponent = {},
	SpriteAnimatorComponent = {
		mStates = "STACK_ANIMATIONSTATE",
		mCachedTargetSpriteTag = "ComponentTags",
	},
	SpriteComponent = {
		transform_offset = "vec2",
		offset_animator_offset = "vec2",
		mSprite = "as::Sprite*",
		mRenderList = "SpriteRenderList*",
	},
	SpriteOffsetAnimatorComponent = {},
	SpriteParticleEmitterComponent = {
		color = "types::fcolor",
		color_change = "types::fcolor",
		velocity = "vec2",
		gravity = "vec2",
		scale = "vec2",
		scale_velocity = "vec2",
		randomize_lifetime = "ValueRange",
		randomize_position = "types::aabb",
		randomize_velocity = "types::aabb",
		randomize_scale = "types::aabb",
		randomize_rotation = "ValueRange",
		randomize_angular_velocity = "ValueRange",
		randomize_alpha = "ValueRange",
		randomize_animation_speed_coeff = "ValueRange",
		expand_randomize_position = "vec2",
	},
	SpriteStainsComponent = {
		mData = "SpriteStains*",
		mTextureHandle = "VirtualTextureHandle",
		mState = "SpriteStainsState",
	},
	StatusEffectDataComponent = {
		stain_effects = "VECTOR_FLOAT",
		stain_effect_cooldowns = "VECTOR_INT32",
		effects_previous = "VECTOR_FLOAT",
		ingestion_effects = "VECTOR_FLOAT",
		ingestion_effect_causes = "VEC_OF_MATERIALS",
		ingestion_effect_causes_many = "VECTOR_INT32",
		mStainEffectsSmoothedForUI = "VECTOR_FLOAT",
	},
	StreamingKeepAliveComponent = {},
	TelekinesisComponent = {},
	TeleportProjectileComponent = {
		mWhoShot = "EntityID",
	},
	TextLogComponent = {},
	TorchComponent = {},
	UIIconComponent = {},
	UIInfoComponent = {},
	VariableStorageComponent = {},
	VelocityComponent = {
		mVelocity = "vec2",
		mPrevVelocity = "vec2",
		mPrevPosition = "ivec2",
	},
	VerletPhysicsComponent = {
		type = "VERLET_TYPE::Enum",
		animation_target_offset = "vec2",
		m_position_previous = "vec2",
		colors = "UintArrayInline",
		materials = "UintArrayInline",
		masses = "FloatArrayInline",
		positions = "Vec2ArrayInline",
		positions_prev = "Vec2ArrayInline",
		velocities = "Vec2ArrayInline",
		dampenings = "FloatArrayInline",
		freedoms = "FloatArrayInline",
		links = "VerletLinkArrayInline",
		sprite = "VerletSprite*",
	},
	VerletWeaponComponent = {},
	VerletWorldJointComponent = {
		world_position = "vec2",
		mCell = "grid::ICell*",
	},
	WalletComponent = {},
	WalletValuableComponent = {},
	WorldStateComponent = {
		player_spawn_location = "vec2",
		lua_globals = "MAP_STRING_STRING",
		pending_portals = "VEC_PENDINGPORTAL",
		apparitions_per_level = "VECTOR_INT32",
		npc_parties = "VEC_NPCPARTY",
		orbs_found_thisrun = "VECTOR_INT32",
		flags = "VECTOR_STRING",
		changed_materials = "VECTOR_STRING",
		cuts_through_world = "VEC_CUTTHROUGHWORLD",
	},
	WormAIComponent = {
		mRandomTarget = "vec2",
	},
	WormAttractorComponent = {},
	WormComponent = {
		mTargetVec = "vec2",
		mTargetPosition = "vec2",
		mPrevPositions = "WormPartPositions",
	},
	WormPlayerComponent = {
		mPrevPosition = "vec2",
		mDirection = "vec2",
	},
}
